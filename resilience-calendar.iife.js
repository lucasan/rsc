var ResilienceCalendar=function(){"use strict";class t{constructor(t){this.context=t}debug(t,e={}){}error(t,e={}){}warn(t,e={}){}}const e=new t("Date Utils");function n(t,e){const n=new Date(Date.UTC(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate())),s=new Date(Date.UTC(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate()));if(s<n)return null;if(s.getTime()===n.getTime())return 1;const a=Math.floor((s.getTime()-n.getTime())/864e5)+1;return a>=1&&a<=365?a:null}function s(t,n){if(n<1||n>365)throw new Error("Step number must be between 1 and 365");const s=new Date(Date.UTC(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()));return e.debug("Original result",s),s.setUTCDate(s.getUTCDate()+(n-1)),e.debug("New result",s),s}const a=new t("StepService");class r{constructor(t){this.config=t,this.cache=new Map,this.loading=new Map}get baseUrl(){var t;if(!(null==(t=this.config)?void 0:t.FIRESTORE_BASE_URL))throw new Error("Firebase configuration is missing");return this.config.FIRESTORE_BASE_URL}async getStep(t){try{if(a.debug("Getting step",{stepNumber:t}),!this.isValidStepNumber(t))throw new Error(`Invalid step number: ${t}`);if(this.cache.has(t))return a.debug("Cache hit",{stepNumber:t}),this.cache.get(t);if(this.loading.has(t))return a.debug("Already loading",{stepNumber:t}),this.loading.get(t);const e=this.fetchStep(t);this.loading.set(t,e);const n=await e;return a.debug("Fetched step data",{stepNumber:t,step:n}),this.cache.set(t,n),this.loading.delete(t),n}catch(e){throw a.error("Error getting step",{stepNumber:t,error:e}),this.loading.delete(t),e}}async fetchStep(t){try{const e=`${this.baseUrl}/steps/${t}`;a.debug("Fetching step",{url:e,stepNumber:t});const n=await fetch(e);if(a.debug("Fetch response",{status:n.status,ok:n.ok,stepNumber:t,url:e}),!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const s=await n.json();a.debug("Raw Firestore data",{stepNumber:t,firestoreData:s});const r=this.transformFirestoreData(s);return a.debug("Transformed step data",{stepNumber:t,data:r,dataType:typeof r,hasStepNumber:!!(null==r?void 0:r.step_number),hasStepOfDay:!!(null==r?void 0:r.step_of_the_day)}),this.validateStepData(r)}catch(e){throw a.error("Fetch error",{stepNumber:t,error:e.message,errorType:e.constructor.name,stack:e.stack}),e}}isValidStepNumber(t){const e=Number(t);return!isNaN(e)&&e>=1&&e<=365}validateStepData(t){var e,n;if(a.debug("Validating step data structure",{data:t,hasStepNumber:!!(null==t?void 0:t.step_number),hasStepOfDay:!!(null==t?void 0:t.step_of_the_day),stepNumberType:typeof(null==t?void 0:t.step_number),stepOfDayType:typeof(null==t?void 0:t.step_of_the_day)}),t.step_number&&(t.step_number=String(t.step_number).replace(/[^0-9]/g,"")),!t.step_number||!t.step_of_the_day)throw new Error("Invalid step data structure: missing "+(t.step_number?"step_of_the_day":"step_number"));return a.debug("Step data validated",{stepNumber:t.step_number,title:null==(e=t.step_of_the_day)?void 0:e.title,hasTitle:!!(null==(n=t.step_of_the_day)?void 0:n.title)}),t}clearCache(){a.debug("Clearing cache"),this.cache.clear(),this.loading.clear()}setBaseUrl(t){this.baseUrl=t}async getStepsForMonth(t,e){a.debug("Getting steps for month",{year:t,month:e});const s=new Date(t,e,1),r=new Date(t,e+1,0),i=new Set,o=new Date(s);for(;o<=r;){const t=new Date(Date.UTC(o.getUTCFullYear(),o.getUTCMonth(),o.getUTCDate())),e=new Date(Date.UTC(this.config.PROGRAM_START_DATE.getUTCFullYear(),this.config.PROGRAM_START_DATE.getUTCMonth(),this.config.PROGRAM_START_DATE.getUTCDate())),s=new Date(Date.UTC(this.config.PROGRAM_END_DATE.getUTCFullYear(),this.config.PROGRAM_END_DATE.getUTCMonth(),this.config.PROGRAM_END_DATE.getUTCDate()));if(t>=e&&t<=s){const t=n(this.config.PROGRAM_START_DATE,o);t&&t>0&&i.add(t)}o.setDate(o.getDate()+1)}const l=Array.from(i).map((t=>this.getStep(t)));return(await Promise.all(l)).filter(Boolean)}transformFirestoreData(t){if(!(null==t?void 0:t.fields))return null;const e={};for(const[n,s]of Object.entries(t.fields)){const t=Object.keys(s)[0];e[n]="mapValue"===t?this.transformFirestoreData(s.mapValue):s[t]}return e}}class i{constructor(t={}){this.FIREBASE_PROJECT_ID=t.projectId||"",this.PROGRAM_START_DATE=new Date(t.startDate)||new Date(Date.now()),this.TOTAL_STEPS=365}get PROGRAM_END_DATE(){const t=new Date(this.PROGRAM_START_DATE);return t.setUTCDate(t.getUTCDate()+364),t}get FIRESTORE_BASE_URL(){if(!this.FIREBASE_PROJECT_ID)throw new Error("Firebase Project ID is required");return`https://firestore.googleapis.com/v1/projects/${this.FIREBASE_PROJECT_ID}/databases/(default)/documents`}}class o{constructor(t={}){if(!t.projectId)throw new Error("Firebase Project ID is required");this.config=new i(t),this.stepService=new r(this.config)}async getStep(t){return this.stepService.getStep(t)}async getStepsForMonth(t,e){return this.stepService.getStepsForMonth(t,e)}}const l=new t("DayCell");class c{constructor(t,e={}){this.date=t,this.isToday=e.isToday||!1,this.isSelected=e.isSelected||!1,this.stepNumber=e.stepNumber,this.stepTitle=e.stepTitle,this.isEmpty=e.isEmpty||!1}render(){if(this.isEmpty)return'<div class="p-2 md:p-4 border border-transparent"></div>';const t=this.date.getDate();return l.debug("Rendering cell with:",{day:t,stepNumber:this.stepNumber,stepTitle:this.stepTitle,hasTitle:!!this.stepTitle}),`\n            <div class="day-cell relative border rounded-lg transition-all duration-200\n                aspect-square w-[40px] md:w-auto md:min-h-[100px] \n                flex items-center justify-center md:block\n                ${this.isToday?"bg-blue-50 border-blue-200":"border-gray-100 hover:border-blue-300"}\n                ${this.isSelected?"bg-blue-100 border-blue-400":""}\n                focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\n                cursor-pointer p-2 md:overflow-clip"\n                data-date="${this.date.toISOString()}"\n                role="button"\n                aria-label="${t}${this.stepNumber?` - Step ${this.stepNumber}`:""}"\n            >\n                <span class="text-sm ${this.isToday?"font-bold":""}">${t}</span>\n                ${this.stepNumber?`\n                    <div class="absolute bottom-1 right-1 w-1.5 h-1.5 rounded-full bg-blue-600 md:hidden"></div>\n                    <div class="text-xs hidden md:block p-2">\n                        <span class="font-medium text-blue-600">Step ${this.stepNumber}</span>\n                        ${this.stepTitle?`\n                            <p class="mt-1 text-gray-600 line-clamp-5 overflow-hidden">${this.stepTitle}</p>\n                        `:""}\n                    </div>\n                `:""}\n            </div>\n        `}}class d{constructor(t){this.container=t,this.isOpen=!1,this.currentStep=null,this.handleClose=this.handleClose.bind(this),this.handleKeydown=this.handleKeydown.bind(this),this.handleOverlayClick=this.handleOverlayClick.bind(this),this.handleTouchStart=this.handleTouchStart.bind(this),this.handleTouchMove=this.handleTouchMove.bind(this),this.handleTouchEnd=this.handleTouchEnd.bind(this),document.addEventListener("keydown",this.handleKeydown),this.touchStartY=0,this.touchDeltaY=0,this.lastFocusedElement=null}open(t){this.lastFocusedElement=document.activeElement,this.currentStep=t,this.isOpen=!0,this.render(),this.updateURL();const e=this.container.querySelector(".panel-content");e&&(e.setAttribute("tabindex","0"),e.focus())}close(){if(!this.isOpen)return;this.container.querySelector(".transform").classList.remove("show"),setTimeout((()=>{this.isOpen=!1,this.currentStep=null,this.render(),this.updateURL(),this.lastFocusedElement&&this.lastFocusedElement.focus()}),500)}handleClose(){this.close()}handleKeydown(t){"Escape"===t.key&&this.isOpen&&this.close()}handleOverlayClick(t){t.target.classList.contains("overlay-bg")&&this.close()}updateURL(){const t=new URL(window.location);this.isOpen&&this.currentStep?t.searchParams.set("step",this.currentStep.step_number):t.searchParams.delete("step"),window.history.pushState({},"",t)}render(){if(!this.isOpen)return void(this.container.innerHTML="");const t=this.currentStep;this.container.innerHTML=`\n            <div class="panel-content fixed inset-0 bg-black bg-opacity-50 transition-opacity overlay-bg">\n                <div class="fixed inset-y-0 right-0 w-full md:max-w-4xl bg-white shadow-xl transform transition-transform duration-500 overflow-y-auto">\n                    \x3c!-- Decorative top bar --\x3e\n                    <div class="hidden md:block h-1 bg-gradient-to-r from-blue-500 to-blue-600"></div>\n                    \n                    <div class="relative p-4 md:p-12">\n                        \x3c!-- Mobile header --\x3e\n                        <div class="flex items-center justify-between md:hidden mb-4">\n                            <div class="text-sm font-medium text-blue-600">\n                                Step ${t.step_number}\n                            </div>\n                            <button \n                                class="mobile-close p-2 text-gray-500 hover:text-gray-700"\n                                aria-label="Close panel"\n                            >\n                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />\n                                </svg>\n                            </button>\n                        </div>\n                        \n                        \x3c!-- Desktop close button --\x3e\n                        <button \n                            class="desktop-close absolute right-4 text-gray-400 hover:text-gray-600 transition-colors duration-200 hidden md:block"\n                            aria-label="Close panel"\n                        >\n                            <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 18L18 6M6 6l12 12" />\n                            </svg>\n                        </button>\n                        \n                        \x3c!-- Content for both mobile and desktop --\x3e\n                        <div class="space-y-8 max-w-2xl focus:outline-none"\n                             tabindex="0"\n                             role="region"\n                             aria-label="Step details">\n                            \x3c!-- Step number (desktop only) --\x3e\n                            <div class="hidden md:block text-sm font-medium text-blue-600 tracking-wide uppercase">\n                                Step ${t.step_number}\n                            </div>\n                            \n                            \x3c!-- Title --\x3e\n                            <h2 class="text-xl md:text-3xl font-bold text-gray-900 leading-tight">\n                                ${t.step_of_the_day.title}\n                            </h2>\n\n                            \x3c!-- Quote --\x3e\n                            ${t.quote?`\n                                <blockquote class="relative">\n                                <svg class="absolute -top-6 -start-8 size-16 text-gray-200" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">\n                                    <path d="M7.39762 10.3C7.39762 11.0733 7.14888 11.7 6.6514 12.18C6.15392 12.6333 5.52552 12.86 4.76621 12.86C3.84979 12.86 3.09047 12.5533 2.48825 11.94C1.91222 11.3266 1.62421 10.4467 1.62421 9.29999C1.62421 8.07332 1.96459 6.87332 2.64535 5.69999C3.35231 4.49999 4.33418 3.55332 5.59098 2.85999L6.4943 4.25999C5.81354 4.73999 5.26369 5.27332 4.84476 5.85999C4.45201 6.44666 4.19017 7.12666 4.05926 7.89999C4.29491 7.79332 4.56983 7.73999 4.88403 7.73999C5.61716 7.73999 6.21938 7.97999 6.69067 8.45999C7.16197 8.93999 7.39762 9.55333 7.39762 10.3ZM14.6242 10.3C14.6242 11.0733 14.3755 11.7 13.878 12.18C13.3805 12.6333 12.7521 12.86 11.9928 12.86C11.0764 12.86 10.3171 12.5533 9.71484 11.94C9.13881 11.3266 8.85079 10.4467 8.85079 9.29999C8.85079 8.07332 9.19117 6.87332 9.87194 5.69999C10.5789 4.49999 11.5608 3.55332 12.8176 2.85999L13.7209 4.25999C13.0401 4.73999 12.4903 5.27332 12.0713 5.85999C11.6786 6.44666 11.4168 7.12666 11.2858 7.89999C11.5215 7.79332 11.7964 7.73999 12.1106 7.73999C12.8437 7.73999 13.446 7.97999 13.9173 8.45999C14.3886 8.93999 14.6242 9.55333 14.6242 10.3Z" fill="currentColor"></path>\n                                </svg>\n\n                                <div class="relative z-10">\n                                    <p class="text-gray-600 sm:text-xl"><em>\n                                        ${t.quote}\n                                    </em></p>\n                                </div>\n                                </blockquote>\n                            `:""}\n                            \n                            \x3c!-- Review and Appreciate --\x3e\n                            ${t.review_and_appreciate?`\n                                <div class="panel-section md:bg-transparent md:p-0">\n                                    <h3 class="text-lg md:text-xl font-semibold text-gray-800 mb-3">Review and Appreciate</h3>\n                                    <p class="text-gray-600 leading-relaxed">${t.review_and_appreciate}</p>\n                                </div>\n                            `:""}\n                            \n                            \x3c!-- Main content --\x3e\n                            <div class="panel-section md:bg-transparent md:p-0">\n                                <h3 class="text-lg md:text-xl font-semibold text-gray-800 mb-3">Today's Step</h3>\n                                <p class="text-gray-600 leading-relaxed">${t.step_of_the_day.content}</p>\n                            </div>\n                            \n                            \x3c!-- Action step --\x3e\n                            <div class="panel-section md:bg-blue-50 md:p-6 md:rounded-xl">\n                                <h3 class="text-lg md:text-xl font-semibold text-gray-800 mb-3">\n                                    <span class="md:text-blue-600">Action Step</span>\n                                </h3>\n                                <p class="text-gray-600 md:text-gray-700 leading-relaxed">${t.action_step}</p>\n                            </div>\n                            \n                            \x3c!-- Journal entry --\x3e\n                            <div class="panel-section md:bg-gray-50 md:p-6 md:rounded-xl">\n                                <h3 class="text-lg md:text-xl font-semibold text-gray-800 mb-3">Journal Entry</h3>\n                                <p class="text-gray-600 leading-relaxed">${t.journal_entry}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,this.container.querySelectorAll(".mobile-close, .desktop-close").forEach((t=>{t.addEventListener("click",this.handleClose)})),this.container.querySelector(".overlay-bg").addEventListener("click",this.handleOverlayClick);const e=this.container.querySelector(".transform");requestAnimationFrame((()=>{requestAnimationFrame((()=>{e.classList.add("show")}))}))}addTouchHandlers(){const t=this.container.querySelector(".transform");t.addEventListener("touchstart",this.handleTouchStart),t.addEventListener("touchmove",this.handleTouchMove),t.addEventListener("touchend",this.handleTouchEnd)}handleTouchStart(t){this.touchStartY=t.touches[0].clientY}handleTouchMove(t){if(this.touchDeltaY=t.touches[0].clientY-this.touchStartY,this.touchDeltaY>0){t.preventDefault();this.container.querySelector(".transform").style.transform=`translateY(${this.touchDeltaY}px)`}}handleTouchEnd(){const t=this.container.querySelector(".transform");this.touchDeltaY>100?this.close():t.style.transform="",this.touchDeltaY=0}}const h=new t("QuoteService");class u{constructor(){this.quotes=null,this.baseUrl="./src/data"}async loadQuotes(){if(this.quotes)return this.quotes;try{const t=await fetch(`${this.baseUrl}/months_titles.json`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const e=await t.json();return this.quotes=e[0],h.debug("Loaded month quotes",{quotes:this.quotes}),this.quotes}catch(t){throw h.error("Error loading quotes",{error:t}),t}}async getQuoteForMonth(t){return(await this.loadQuotes())[new Date(2024,t,1).toLocaleString("default",{month:"long"})]||null}}const p=new t("Calendar");class g{constructor(t,e){if(!e)throw new Error("Config is required for Calendar initialization");this.container=t,this.config=e,this.startDate=this.config.PROGRAM_START_DATE,this.currentDate=new Date(this.startDate.getFullYear(),this.startDate.getMonth(),1),this.selectedDate=null,this.handleClick=this.handleClick.bind(this),this.handleKeydown=this.handleKeydown.bind(this),this.container.addEventListener("click",this.handleClick),t.setAttribute("tabindex","0"),t.addEventListener("keydown",this.handleKeydown),this.stepService=new r(this.config),this.monthSteps=new Map,this.quoteService=new u,this.panelContainer=document.createElement("div"),document.body.appendChild(this.panelContainer),this.stepPanel=new d(this.panelContainer),p.debug("Calendar constructor");const n=function(){const t=new URLSearchParams(window.location.search).get("step");return t?parseInt(t,10):null}();if(p.debug("stepFromUrl",n),n){const t=s(this.startDate,n);p.debug("dateForStep",t),this.currentDate=new Date(t.getFullYear(),t.getMonth(),1),p.debug("this.currentDate",this.currentDate),this.selectedDate=t,p.debug("this.selectedDate",this.selectedDate)}(async()=>{await this.render(),this.selectedDate&&await this.selectDate(this.selectedDate)})()}async loadCurrentMonthSteps(){const t=this.currentDate.getFullYear(),e=this.currentDate.getMonth();p.debug("Starting to load month steps",{year:t,month:e});try{const n=await this.stepService.getStepsForMonth(t,e);p.debug("Got steps from service",{count:n.length,steps:n}),this.monthSteps.clear(),n.forEach((t=>{var e;const n=String(t.step_number);p.debug("Adding step to month cache",{stepNumber:n,title:null==(e=t.step_of_the_day)?void 0:e.title}),this.monthSteps.set(n,t)})),p.debug("Finished loading month steps",{count:this.monthSteps.size,cached:Array.from(this.monthSteps.keys())})}catch(n){p.error("Failed to load month steps",{error:n})}}async getStepForDate(t){try{const e=n(this.startDate,t);if(!e)return null;const s=String(e);if(this.monthSteps.has(s))return p.debug("Cache hit for step",{stepNumber:e,stepNumberStr:s}),this.monthSteps.get(s);return t.getMonth()===this.currentDate.getMonth()&&t.getFullYear()===this.currentDate.getFullYear()?(await this.loadCurrentMonthSteps(),this.monthSteps.get(s)):await this.stepService.getStep(e)}catch(e){return p.error("Error getting step for date",{date:t,error:e}),null}}async createNavigation(){const t=new Date(this.config.PROGRAM_START_DATE);t.setDate(1);const e=new Date(this.config.PROGRAM_END_DATE);e.setDate(1);const n=this.currentDate.getFullYear()===t.getFullYear()&&this.currentDate.getMonth()===t.getMonth(),s=this.currentDate.getFullYear()===e.getFullYear()&&this.currentDate.getMonth()===e.getMonth(),a=await this.quoteService.getQuoteForMonth(this.currentDate.getMonth());return`\n            <div class="space-y-4 mb-6">\n                <div class="flex items-center justify-between px-2">\n                    <button \n                        class="prev-month p-3 hover:bg-gray-100 rounded-full transition-colors duration-200 ${n?"opacity-50 cursor-not-allowed":""}"\n                        tabindex="0"\n                        aria-label="Previous month"\n                        ${n?"disabled":""}\n                    >\n                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>\n                        </svg>\n                    </button>\n                    <h2 class="text-2xl font-bold text-gray-800" id="current-month">\n                        ${this.currentDate.toLocaleString("default",{month:"long",year:"numeric"})}\n                    </h2>\n                    <button \n                        class="next-month p-3 hover:bg-gray-100 rounded-full transition-colors duration-200 ${s?"opacity-50 cursor-not-allowed":""}"\n                        tabindex="0"\n                        aria-label="Next month"\n                        ${s?"disabled":""}\n                    >\n                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>\n                        </svg>\n                    </button>\n                </div>\n                <div class="flex justify-center mt-2">\n                    <button \n                        class="go-to-today px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors duration-200 text-sm"\n                        tabindex="0"\n                        aria-label="Go to today's step"\n                    >\n                        Go to Today's Step\n                    </button>\n                </div>\n                <div class="px-4 py-3 bg-gray-50 rounded-lg">\n                    <blockquote class="text-sm italic text-gray-600 text-center">\n                        <p class="mb-2">"${a||"The journey of a thousand miles begins with a single step."}"</p>\n                        <footer class="text-xs text-gray-500">― Monthly Wisdom</footer>\n                    </blockquote>\n                </div>\n            </div>\n        `}createWeekHeaders(){return`\n            <div class="grid grid-cols-7 gap-2 mb-4">\n                ${["Sun","Mon","Tue","Wed","Thu","Fri","Sat"].map((t=>`\n                    <div class="text-center text-gray-500 font-semibold tracking-wider text-sm">\n                        ${t}\n                    </div>\n                `)).join("")}\n            </div>\n        `}getDaysInMonth(t){const e=t.getFullYear(),n=t.getMonth(),s=new Date(e,n,1);return{daysInMonth:new Date(e,n+1,0).getDate(),startingDay:s.getDay()}}async createCalendarGrid(){var t,e;const{daysInMonth:s,startingDay:a}=this.getDaysInMonth(this.currentDate);let r=[];for(let n=0;n<a;n++){const t=new c(null,{isEmpty:!0});r.push(t.render())}await this.loadCurrentMonthSteps();for(let i=1;i<=s;i++){const s=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),i),a=n(this.startDate,s),o=a?this.monthSteps.get(String(a)):null;p.debug("Creating cell with step data",{date:s,stepNumber:a,hasStep:!!o,title:null==(t=null==o?void 0:o.step_of_the_day)?void 0:t.title});const l=new c(s,{isToday:this.isToday(s),isSelected:this.isSelected(s),stepNumber:a,stepTitle:(null==(e=null==o?void 0:o.step_of_the_day)?void 0:e.title)||null});r.push(l.render())}return`\n            <div class="grid grid-cols-7 gap-1 md:gap-2">\n                ${r.join("")}\n                </div>\n        `}isToday(t){const e=new Date;return t.toDateString()===e.toDateString()}isSelected(t){return this.selectedDate&&t.toDateString()===this.selectedDate.toDateString()}async handleClick(t){const e=t.target.closest(".day-cell");e&&e.dataset.date&&this.selectDate(new Date(e.dataset.date))}handleKeydown(t){if(document.activeElement===this.container){if(!this.selectedDate)return this.selectedDate=this.isToday(this.currentDate)?new Date:new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),1),void this.render();switch(t.key){case"ArrowLeft":t.preventDefault(),this.navigateDate(-1);break;case"ArrowRight":t.preventDefault(),this.navigateDate(1);break;case"ArrowUp":t.preventDefault(),this.navigateDate(-7);break;case"ArrowDown":t.preventDefault(),this.navigateDate(7);break;case"Enter":case" ":t.preventDefault(),this.selectedDate&&this.selectDate(this.selectedDate)}}}navigateDate(t){const e=new Date(this.selectedDate);e.setDate(e.getDate()+t),e.getMonth()!==this.currentDate.getMonth()&&(this.currentDate=e),this.selectedDate=e,this.render();const n=this.container.querySelector(`[data-date="${e.toISOString()}"]`);n&&n.scrollIntoView({behavior:"smooth",block:"nearest"})}async navigateMonth(t){const e=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth()+t,1),n=new Date(this.config.PROGRAM_START_DATE);n.setDate(1);const s=new Date(this.config.PROGRAM_END_DATE);s.setDate(1),this.currentDate=e<n?n:e>s?s:e,await this.loadCurrentMonthSteps(),await this.render()}async render(){var t;this.container.innerHTML=`\n            <div class="calendar-container p-6 bg-white rounded-xl shadow-lg">\n                ${await this.createNavigation()}\n                ${this.createWeekHeaders()}\n                ${await this.createCalendarGrid()}\n            </div>\n        `;const e=this.container.querySelector(".prev-month"),n=this.container.querySelector(".next-month"),s=this.container.querySelector(".go-to-today");null==e||e.addEventListener("click",(()=>this.navigateMonth(-1))),null==e||e.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.navigateMonth(-1))})),null==n||n.addEventListener("click",(()=>this.navigateMonth(1))),null==n||n.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.navigateMonth(1))})),null==s||s.addEventListener("click",(()=>this.goToToday())),null==s||s.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.goToToday())})),this.addEventListeners();const a=this.container.querySelector(`[data-date="${null==(t=this.selectedDate)?void 0:t.toISOString()}"]`);a&&(a.setAttribute("tabindex","0"),document.activeElement===this.container&&a.focus())}addEventListeners(){this.container.querySelectorAll(".day-cell[data-date]").forEach(((t,e)=>{t.setAttribute("tabindex","0"),t.setAttribute("role","button"),t.setAttribute("aria-label",`${new Date(t.dataset.date).getDate()}`);const n=t.cloneNode(!0);t.parentNode.replaceChild(n,t),n.addEventListener("click",(()=>this.selectDate(new Date(n.dataset.date)))),n.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.selectDate(new Date(n.dataset.date)))}))}))}async selectDate(t){t.getMonth()===this.currentDate.getMonth()&&t.getFullYear()===this.currentDate.getFullYear()||(this.currentDate=new Date(t.getFullYear(),t.getMonth(),1),await this.loadCurrentMonthSteps(),await this.render());const e=await this.getStepForDate(t);e&&this.stepPanel.open(e)}async goToToday(){const t=new Date,e=n(this.startDate,t);if(e){const t=s(this.startDate,e);this.currentDate=new Date(t.getFullYear(),t.getMonth(),1),this.selectedDate=t,await this.loadCurrentMonthSteps(),await this.render(),await this.selectDate(this.selectedDate)}}}const b={initResilienceCalendar:function(t={}){const{container:e,projectId:n,startDate:s}=t;try{const t=new o({projectId:n,startDate:s}),a=document.getElementById(e);new g(a,t.config);return t}catch(a){throw a}},ResilienceCalendar:o};return"undefined"!=typeof window&&Object.assign(window,b),b}();
